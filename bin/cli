#!/usr/bin/env node

var program = require('commander');
var OhServer = require('../modules/server');
var ohAdd = require('../modules/add');
var ohLs = require('../modules/ls');
var ohDel = require('../modules/del');
var ohUpdate = require('../modules/update');
var ohKey = require('../modules/key');

program
  .version('0.2.3');

program
  .command('server <action> [port]')
  .description('manage webhook server')
  .option('start', 'start the server')
  .option('stop', 'stop the server')
  .option('restart', 'restart the server')
  .action(function (option, port) {
    try {
      var ohServer = new OhServer(port || '5000');
      ohServer[option]();
    } catch (e) {
      console.log('params: start|restart|stop');
    }
  });

program
  .command('key <action> [index]')
  .description('manage access keys')
  .option('gen', 'generate an access key')
  .option('ls', 'list keys')
  .option('del', 'delete an access key with index')
  .option('clear', 'clear all keys')
  .action(function (action, index) {
    switch (action) {
      case 'gen':
        var result = ohKey.gen();
        console.log('Generated a new key: ' + result);
        break;
      case 'ls':
        var result = ohKey.ls();
        console.table(result);
        break;
      case 'del':
        var result = ohKey.del(index);
        console.log('Deleted a key: ' + result);
        break;
      case 'clear':
        var result = ohKey.clear();
        if (result.length === 0)
          console.log('Cleared all keys');
        break;
      default:
        console.log('param error...');
    }
  });

program
  .command('add')
  .description('add a webhook')
  .option('-a --auth [bool]', 'add command when the webhook is triggered')
  .option('-c --command <cmd>', 'add command when the webhook is triggered')
  .option('-d --desc <description>', 'add description for the webhook')
  .action(function (options) {
    var id = ohAdd(options.desc, options.command, options.auth);
    console.log('Added a new webhook: /hooks/' + id);
  });

program
  .command('ls')
  .description('list all webhooks of the server')
  .action(function () {
    var results = ohLs();
    console.log('Total: ' + results.length);
    console.table(results);
  });

program
  .command('del <index>')
  .description('delete a webhook with specified index')
  .action(function (index) {
    ohDel.del(index);
  });

program
  .command('update <index>')
  .description('update a webhook')
  .option('-a --auth [boolean]', 'change the authentication requirement of the webhook')
  .option('-c --new-command [cmd]', 'add command when the webhook is triggered')
  .option('-d --desc [description]', 'add description for the webhook')
  .action(function (index, options) {
    ohUpdate(index, options.desc, options.newCommand, options.auth);
  });

program
  .command('clear')
  .description('clear all webhooks')
  .action(function () {
    ohDel.clear();
  });

program.parse(process.argv);
