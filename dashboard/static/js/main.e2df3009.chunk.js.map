{"version":3,"sources":["components/notification/ToastsContainer.tsx","components/notification/ToastsStore.ts","util/http.ts","pages/login/Login.tsx","components/pagination/Pagination.tsx","util/time.ts","pages/dashboard/hooks/Hooks.tsx","pages/dashboard/keys/Keys.tsx","pages/dashboard/histories/Histories.tsx","pages/dashboard/Dashboard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ToastsContainerPosition","ToastsContainer","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","storeSubscriptionId","timeoutArray","state","styles","toasts","inherits","createClass","key","value","_this2","store","watch","data","toast","objectSpread","id","Math","random","setState","concat","timeout","setTimeout","filter","t","timer","push","position","TOP_LEFT","top","left","TOP_RIGHT","right","TOP_CENTER","transform","BOTTOM_LEFT","bottom","BOTTOM_RIGHT","BOTTOM_CENTER","unwatch","forEach","clearTimeout","ReactDOM","createPortal","_renderContainer","document","body","react_default","a","createElement","style","className","map","status","role","message","Component","ToastsStore","Store","classNames","_toast","WatchableStore","axios","defaults","interceptors","request","use","config","headers","Authorization","localStorage","getItem","sessionStorage","response","prototype","toString","success","error","removeItem","history","Login","login","_this$state","username","password","http","post","then","res","rememberUser","setItem","token","htmlFor","type","placeholder","onChange","e","target","checked","onClick","React","Pagination","handleHrefChange","page","route","getPages","pages","current","total","i","last","nextProps","nextContext","index","pop","disabled","getFormattedTime","timestamp","moment","parseInt","format","Hooks","getHooks","get","next","items","handleEditHook","item","editUuid","uuid","editCommand","command","editDescription","description","editAuthentication","auth","clearEditHook","updateHook","put","updates","currentPage","createHook","createCommand","createDescription","createAuthentication","match","params","deleteHook","window","confirm","delete","clearHooks","renderTable","length","updateTime","data-toggle","data-target","marginLeft","pagination_Pagination","aria-labelledby","data-dismiss","aria-label","aria-hidden","selected","Keys","getKeys","generateKey","deleteKey","clearKeys","createTime","showSuccessAlert","Histories","getHistories","handleViewHistory","currentHistory","routerId","triggerTime","succeeded","result","Dashboard","getProfile","editUsername","userId","logout","updateUsername","updatePassword","retypePassword","editPassword","oldPassword","newPassword","react_router_dom","to","src","height","width","alt","aria-controls","aria-expanded","href","aria-haspopup","react_router","path","component","from","createHashHistory","App","ToastsContainer_ToastsContainer","Boolean","location","hostname","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2df3009.chunk.js","sourcesContent":["import React from 'react'\nimport { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { WatchableStore } from 'watchable-stores'\nimport { IToastsStore } from './ToastsStore'\n\nexport enum ToastsContainerPosition {\n  BOTTOM_CENTER = 'bottom_center',\n  BOTTOM_LEFT = 'bottom_left',\n  BOTTOM_RIGHT = 'bottom_right',\n  TOP_CENTER = 'top_center',\n  TOP_LEFT = 'top_left',\n  TOP_RIGHT = 'top_right',\n}\n\nexport interface IToastsContainerProps {\n  position: ToastsContainerPosition\n  store: WatchableStore<IToastsStore>\n  lightBackground?: boolean\n  className?: string | string[]\n}\n\nexport interface IToastsContainerState {\n  styles: any\n  toasts: any[]\n}\n\nexport class ToastsContainer extends Component<IToastsContainerProps, IToastsContainerState> {\n  private storeSubscriptionId: number\n  private timeoutArray: any[]\n\n  constructor(props: IToastsContainerProps) {\n    super(props)\n\n    this.state = {\n      styles: {},\n      toasts: [],\n    }\n\n    this.storeSubscriptionId = -1\n    this.timeoutArray = []\n  }\n\n  public componentDidMount() {\n    this.storeSubscriptionId = this.props.store.watch((data) => {\n      const toast = { ...data, id: Math.random() }\n      this.setState({ toasts: [toast].concat(this.state.toasts) })\n      const timeout = setTimeout(() => {\n        this.setState({ toasts: this.state.toasts.filter((t) => t.id !== toast.id) })\n      }, data.timer || 3000)\n      this.timeoutArray.push(timeout)\n    })\n\n    const styles: any = {}\n    switch (this.props.position) {\n      case ToastsContainerPosition.TOP_LEFT:\n        styles.top = 10\n        styles.left = 10\n        break\n      case ToastsContainerPosition.TOP_RIGHT:\n        styles.top = 10\n        styles.right = 10\n        break\n      case ToastsContainerPosition.TOP_CENTER:\n        styles.top = 10\n        styles.left = '50%'\n        styles.transform = 'translateX(-50%)'\n        break\n      case ToastsContainerPosition.BOTTOM_LEFT:\n        styles.bottom = 10\n        styles.left = 10\n        break\n      case ToastsContainerPosition.BOTTOM_RIGHT:\n        styles.bottom = 10\n        styles.right = 10\n        break\n      case ToastsContainerPosition.BOTTOM_CENTER:\n        styles.bottom = 10\n        styles.left = '50%'\n        styles.transform = 'translateX(-50%)'\n        break\n      default:\n        styles.bottom = 10\n        styles.right = 10\n        break\n    }\n    this.setState({ styles })\n  }\n\n  public componentWillUnmount() {\n    this.props.store.unwatch(this.storeSubscriptionId)\n    this.timeoutArray.forEach(clearTimeout)\n  }\n\n  public render() {\n    return ReactDOM.createPortal(\n      this._renderContainer(),\n      document.body,\n    )\n  }\n\n  private _renderContainer() {\n    return (\n      <div style={this.state.styles}\n           className={'toasts-container ' + (this.props.className || '')}>\n        {\n          this.state.toasts.map((toast) => {\n            return (\n                <div className={`alert alert-${toast.status} notification`} role=\"alert\">\n                  {toast.message}\n                </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n","import { WatchableStore } from 'watchable-stores'\n\nexport interface IToastsStore {\n    status: string\n    message: string | HTMLElement\n    timer: number\n    classNames: string[] | string\n}\n\nclass Store extends WatchableStore<IToastsStore> {\n    constructor() {\n        super({ status: '', message: '', timer: 0, classNames: '' })\n    }\n\n    public success(message: string | HTMLElement, timer?: number, classNames?: string | string[]): void {\n        this._toast('success', message, timer, classNames)\n    }\n\n    public info(message: string | HTMLElement, timer?: number, classNames?: string | string[]): void {\n        this._toast('info', message, timer, classNames)\n    }\n\n    public warning(message: string | HTMLElement, timer?: number, classNames?: string | string[]): void {\n        this._toast('warning', message, timer, classNames)\n    }\n\n    public error(message: string | HTMLElement, timer?: number, classNames?: string | string[]): void {\n        this._toast('danger', message, timer, classNames)\n    }\n\n    private _toast(status: string, message: string | HTMLElement, timer?: number, classNames?: string | string[]): void {\n        this.data = {\n            classNames: classNames || '',\n            message,\n            status,\n            timer: timer || 3000,\n        }\n    }\n}\n\nexport const ToastsStore = new Store()\n","import axios from 'axios'\nimport { history } from '../App'\nimport { ToastsStore } from '../components/notification'\n\naxios.defaults.timeout = 3600000\naxios.interceptors.request.use(config => {\n  config.headers = {\n    Authorization:\n        `${localStorage.getItem('token') || sessionStorage.getItem('token')}`\n  }\n  return config\n})\naxios.interceptors.response.use(response => {\n  if (response.data.data &&\n      Object.prototype.toString.call(response.data.data) === \"[object String]\")\n    ToastsStore.success(response.data.data)\n  return response\n}, error => {\n  if (error.response.status === 401) {\n    localStorage.removeItem('token')\n    ToastsStore.error('Login first, please')\n    history.push('/login')\n  } else {\n    if (error.response.data.message)\n      ToastsStore.error(error.response.data.message)\n  }\n})\n\nexport default axios\n","import React from 'react'\nimport './Login.css'\nimport http from '../../util/http'\nimport { history } from '../../App'\n\ninterface Props {}\ninterface State {\n  rememberUser: boolean\n  username: string\n  password: string\n}\n\nclass Login extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      rememberUser: false\n    }\n  }\n\n  state: State\n\n  login = () => {\n    const { username, password } = this.state\n    http.post('/api/login', { username, password })\n        .then(res => {\n          if (res)\n            if (this.state.rememberUser)\n              localStorage.setItem('token', res.data.data.token)\n            else\n              sessionStorage.setItem('token', res.data.data.token)\n            history.push('/dashboard/hooks')\n        })\n  }\n\n  render() {\n    return (\n        <div className=\"container\">\n          <div className=\"row login\">\n            <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\">\n              <h1 className=\"h3 mb-3 font-weight-normal\">Sign in</h1>\n              <label htmlFor=\"inputEmail\" className=\"sr-only\">Username</label>\n              <input type=\"email\" className=\"form-control mb-3\" placeholder=\"Username\"\n                     value={this.state.username}\n                     onChange={e => this.setState({ username: e.target.value })}/>\n              <label htmlFor=\"inputPassword\" className=\"sr-only\">Password</label>\n              <input type=\"password\" className=\"form-control mb-3\" placeholder=\"Password\"\n                     value={this.state.password}\n                     onChange={e => this.setState({ password: e.target.value })}/>\n              <div className=\"checkbox mb-3\">\n                <label>\n                  <input type=\"checkbox\"\n                         checked={this.state.rememberUser}\n                         onChange={e => this.setState({ rememberUser: !this.state.rememberUser })}/> Remember me\n                </label>\n              </div>\n              <button className=\"btn btn-lg btn-primary btn-block\"\n                      type=\"submit\"\n                      onClick={this.login}>\n                Sign in\n              </button>\n              <p className=\"mt-5 mb-3 text-mute text-center\">© 2019 Lenconda.</p>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Login\n","import React from 'react'\n\nimport { history } from '../../App'\n\ninterface State {}\ninterface Props {\n  route: string\n  current: number\n  total: number\n}\n\nclass Pagination extends React.Component<Props, State> {\n  componentWillReceiveProps(\n      nextProps: Readonly<Props>, nextContext: any): void {\n  }\n\n  handleHrefChange = (page: number) => {\n    history.push(`${this.props.route}/${page}/`)\n  }\n\n  getPages = (): number[] => {\n    let pages = []\n    const current = this.props.current\n    const left = current - 1\n    const right = this.props.total - current\n    if (left >= 2 && right >= 2)\n      for (let i = current - 2; i <= current + 2; i++)\n        pages.push(i)\n    else if (left < 2 && right >= 2) {\n      const last = this.props.total > 5 ? 5 : this.props.total\n      for (let i = 1; i <= last; i++)\n        pages.push(i)\n    }\n    else if (right < 2 && left >= 2) {\n      const first = this.props.total > 5 ? this.props.total - 4 : 1\n      for (let i = first; i <= this.props.total; i++)\n        pages.push(i)\n    } else\n      for (let i = 1; i <= this.props.total; i++)\n        pages.push(i)\n    return pages\n  }\n\n  render() {\n    return (\n        <nav>\n          <ul className=\"pagination\">\n            <li className={`page-item ${this.props.current === 1 ? 'disabled' : ''}`}>\n              <a className=\"page-link\"\n                 onClick={() => {if (!(this.props.current === 1))\n                   this.handleHrefChange(1)}}>&laquo;\n              </a>\n            </li>\n            <li className={`page-item ${this.props.current === 1 ? 'disabled' : ''}`}>\n              <a className=\"page-link\"\n                 onClick={() => {if (!(this.props.current === 1))\n                   this.handleHrefChange(this.props.current - 1)}}>&lsaquo;\n              </a>\n            </li>\n            {\n              this.props.total <= 10 || this.getPages()[0] === 1 ? null :\n                  <li className=\"page-item disabled\"><a className=\"page-link\">...</a></li>\n            }\n            {\n              this.getPages().map((value, index) =>\n                  <li className={`page-item ${this.props.current === value ? 'active' : ''}`} key={index}>\n                    <a className=\"page-link\" onClick={() => this.handleHrefChange(value)}>{value}</a>\n                  </li>\n              )\n            }\n            {\n              this.props.total <= 10 || this.getPages().pop() === this.props.total\n                  ? null : <li><button disabled>...</button></li>\n            }\n            <li className={`page-item ${this.props.current === this.props.total ? 'disabled' : ''}`}>\n              <a className=\"page-link\"\n                 onClick={() => {if (!(this.props.current === this.props.total))\n                   this.handleHrefChange(this.props.current + 1)}}>&rsaquo;\n              </a>\n            </li>\n            <li className={`page-item ${this.props.current === this.props.total ? 'disabled' : ''}`}>\n              <a className=\"page-link\"\n                 onClick={() => {if (!(this.props.current === this.props.total))\n                   this.handleHrefChange(this.props.total)}}>&raquo;\n              </a>\n            </li>\n          </ul>\n        </nav>\n    )\n  }\n}\n\nexport default Pagination\n","import moment from 'moment'\n\nexport const getFormattedTime = (timestamp: string): string => {\n  if (timestamp)\n    return moment(parseInt(timestamp)).format('YYYY-MM-DD HH:mm:ss')\n  else\n    return 'unknown'\n}\n","import React from 'react'\nimport http from '../../../util/http'\nimport Pagination from '../../../components/pagination/Pagination'\nimport { getFormattedTime } from '../../../util/time'\n\ninterface Props {\n  match: any\n}\ninterface State {\n  next: boolean\n  data: any[]\n  currentPage: number\n  pages: number\n  createCommand: string\n  createDescription: string\n  createAuthentication: string\n  editUuid: string\n  editCommand: string\n  editDescription: string\n  editAuthentication: string\n}\n\nclass Hooks extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      currentPage: 1,\n      pages: 1,\n      next: false,\n      data: [],\n      createCommand: '',\n      createDescription: '',\n      createAuthentication: '1',\n      editUuid: '',\n      editCommand: '',\n      editDescription: '',\n      editAuthentication: ''\n    }\n  }\n\n  componentDidMount(): void {\n    this.getHooks(this.props.match.params.page)\n  }\n\n  componentWillReceiveProps(\n      nextProps: Readonly<Props>, nextContext: any): void {\n    this.setState({\n      currentPage: parseInt(nextProps.match.params.page)\n    })\n    this.getHooks(nextProps.match.params.page)\n  }\n\n  getHooks = (page: number) => {\n    http.get(`/api/hooks?page=${page}`)\n    .then(res => {\n      if (res)\n        this.setState({\n          next: res.data.data.next,\n          data: res.data.data.items,\n          pages: res.data.data.pages\n        })\n    })\n  }\n\n  handleEditHook = (item: any) => {\n    this.setState({\n      editUuid: item.uuid,\n      editCommand: item.command,\n      editDescription: item.description,\n      editAuthentication: item.auth ? '0' : '1'\n    })\n  }\n\n  clearEditHook = () => {\n    this.setState({\n      editUuid: '',\n      editCommand: '',\n      editDescription: '',\n      editAuthentication: ''\n    })\n  }\n\n  updateHook = () => {\n    http.put(`/api/hook/${this.state.editUuid}`, {\n      updates: {\n        command: this.state.editCommand,\n        description: this.state.editDescription,\n        auth: this.state.editAuthentication === '0'\n      }\n    })\n    .then(res => {\n      if (res)\n        this.getHooks(this.state.currentPage)\n        this.clearEditHook()\n    })\n  }\n\n  createHook = () => {\n    http.post('/api/hooks', {\n      command: this.state.createCommand,\n      description: this.state.createDescription,\n      auth: this.state.createAuthentication === '0'\n    }).then(res => {\n      if (res) {\n        this.getHooks(this.props.match.params.page)\n        this.setState({\n          createCommand: '',\n          createDescription: '',\n          createAuthentication: '0'\n        })\n      }\n    })\n  }\n\n  deleteHook = (uuid: string) => {\n    if (window.confirm(`Sure to delete hook /hooks/${uuid}?`))\n      http.delete(`/api/hook/${uuid}`)\n        .then(res => {\n          if (res)\n            this.getHooks(this.state.currentPage)\n        })\n  }\n\n  clearHooks = () => {\n    if (window.confirm(`Sure to CLEAR ALL hooks?`))\n      http.delete('/api/hooks')\n      .then(res => {\n        if (res)\n          this.getHooks(this.state.currentPage)\n      })\n  }\n\n  renderTable = () => {\n    return this.state.data.length === 0 ? <span>There are no hooks yet...</span> :\n        <div className=\"overflow-x-auto\">\n          <table className=\"table table-bordered table-striped table-hover text-nowrap\">\n            <thead>\n            <tr>\n              <th>Path</th>\n              <th>Command</th>\n              <th>Description</th>\n              <th>Authentication</th>\n              <th>Update Time</th>\n              <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              this.state.data.map((item, index) =>\n                  <tr key={index}>\n                    <td><code>/hooks/{item.uuid}</code></td>\n                    <td><code>{item.command}</code></td>\n                    <td>{item.description}</td>\n                    <td className=\"text-center\">\n                      {item.auth ? <i className=\"fa fa-check\"></i> : <i className=\"fa fa-times\"></i>}\n                    </td>\n                    <td>{getFormattedTime(item.updateTime)}</td>\n                    <td>\n                      <button className=\"btn btn-sm btn-danger\"\n                              onClick={() => {this.deleteHook(item.uuid)}}>\n                        <i className=\"fa fa-trash\"></i> Delete\n                      </button>\n                      <button type=\"button\"\n                              className=\"btn btn-sm btn-warning\"\n                              data-toggle=\"modal\"\n                              data-target=\"#edit_hook\"\n                              style={{marginLeft: 5}}\n                              onClick={() => this.handleEditHook(item)}>\n                        <i className=\"fa fa-edit\"></i> Edit\n                      </button>\n                    </td>\n                  </tr>\n              )\n            }\n            </tbody>\n          </table>\n        </div>\n  }\n\n  render() {\n    return (\n        <div>\n          <div className=\"mb-3\">\n            <button type=\"button\" className=\"btn btn-success btn-sm\"\n                    data-toggle=\"modal\" data-target=\"#add_hook\">\n              <i className=\"fa fa-lightbulb\"></i>&nbsp;Add a Hook\n            </button>\n            <button type=\"button\"\n                    className=\"btn btn-danger btn-sm\"\n                    style={{marginLeft: 10}}\n                    onClick={this.clearHooks}>\n              <i className=\"fa fa-trash\"></i>&nbsp;Clear All\n            </button>\n          </div>\n          {this.renderTable()}\n          <div className=\"my-3\">\n            {\n              this.state.data.length === 0 ? null :\n                  <div className=\"panel-footer\">\n                    <Pagination current={this.state.currentPage} total={this.state.pages} route=\"/dashboard/hooks\" />\n                  </div>\n            }\n          </div>\n          <div className=\"modal fade\" id=\"add_hook\" role=\"dialog\"\n               aria-labelledby=\"myModalLabel\">\n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title text-ellipsis\"><i className=\"fa fa-lightbulb\"></i> Add a Hook</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\"\n                          aria-label=\"Close\">\n                    <span aria-hidden=\"true\" className=\"text-white\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"form-group\">\n                    <label>Shell command</label>\n                    <code>\n                      <textarea className=\"form-control form-control-sm\"\n                                value={this.state.createCommand}\n                                onChange={e => this.setState({ createCommand: e.target.value })}/>\n                    </code>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Description</label>\n                    <textarea className=\"form-control form-control-sm\"\n                              value={this.state.createDescription}\n                              onChange={e => this.setState({ createDescription: e.target.value })}/>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Authentication</label>\n                    <select className=\"form-control form-control-sm\"\n                            onChange={e => this.setState({ createAuthentication: e.target.value })}>\n                      <option value=\"0\" selected={this.state.createAuthentication === '0'}>Use access key</option>\n                      <option value=\"1\" selected={this.state.createAuthentication === '1'}>Do not use any key</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button className=\"btn btn-sm btn-primary\" data-dismiss=\"modal\"><i className=\"fa fa-times\"></i> Cancel</button>\n                  <button\n                      className=\"btn btn-sm btn-success\"\n                      data-dismiss=\"modal\"\n                      onClick={this.createHook}\n                      disabled={this.state.createAuthentication === ''\n                      || this.state.createDescription === ''\n                      || this.state.createCommand === ''}>\n                    <i className=\"fa fa-save\"></i> Save\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"modal fade\" id=\"edit_hook\" role=\"dialog\"\n               aria-labelledby=\"myModalLabel\">\n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title text-ellipsis\">\n                    <i className=\"fa fa-edit\"></i> Edit Hook {this.state.editUuid}\n                  </h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\"\n                          aria-label=\"Close\">\n                    <span aria-hidden=\"true\" className=\"text-white\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"form-group\">\n                    <label>Shell command</label>\n                    <code>\n                      <textarea className=\"form-control form-control-sm\"\n                                value={this.state.editCommand}\n                                onChange={e => this.setState({ editCommand: e.target.value })}/>\n                    </code>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Description</label>\n                    <textarea className=\"form-control form-control-sm\"\n                              value={this.state.editDescription}\n                              onChange={e => this.setState({ editDescription: e.target.value })}/>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Authentication</label>\n                    <select className=\"form-control form-control-sm\"\n                            onChange={e => this.setState({ editAuthentication: e.target.value })}>\n                      <option value=\"0\" selected={this.state.editAuthentication === '0'}>Use access key</option>\n                      <option value=\"1\" selected={this.state.editAuthentication === '1'}>Do not use any key</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button className=\"btn btn-sm btn-primary\" data-dismiss=\"modal\" onClick={this.clearEditHook}>\n                    <i className=\"fa fa-times\"></i> Cancel\n                  </button>\n                  <button\n                      className=\"btn btn-sm btn-success\"\n                      data-dismiss=\"modal\"\n                      onClick={this.updateHook}\n                      disabled={this.state.editAuthentication === ''\n                      || this.state.editAuthentication === ''\n                      || this.state.editAuthentication === ''}>\n                    <i className=\"fa fa-save\"></i> Update\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Hooks\n","import React from 'react'\nimport http from '../../../util/http'\nimport Pagination from '../../../components/pagination/Pagination'\nimport { getFormattedTime } from '../../../util/time'\n\ninterface Props {\n  match: any\n}\ninterface State {\n  next: boolean\n  data: any[]\n  currentPage: number\n  pages: number\n  createCommand: string\n  createDescription: string\n  createAuthentication: string\n  editUuid: string\n  editCommand: string\n  editDescription: string\n  editAuthentication: string\n  showSuccessAlert: boolean\n}\n\nclass Keys extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      currentPage: 1,\n      pages: 1,\n      next: false,\n      data: [],\n      createCommand: '',\n      createDescription: '',\n      createAuthentication: '1',\n      editUuid: '',\n      editCommand: '',\n      editDescription: '',\n      editAuthentication: '',\n      showSuccessAlert: false\n    }\n  }\n\n  componentDidMount(): void {\n    this.getKeys(this.props.match.params.page)\n  }\n\n  componentWillReceiveProps(\n      nextProps: Readonly<Props>, nextContext: any): void {\n    this.setState({\n      currentPage: parseInt(nextProps.match.params.page)\n    })\n    this.getKeys(nextProps.match.params.page)\n  }\n\n  getKeys = (page: number) => {\n    http.get(`/api/keys?page=${page}`)\n    .then(res => {\n      if (res)\n        this.setState({\n          next: res.data.data.next,\n          data: res.data.data.items,\n          pages: res.data.data.pages\n        })\n    })\n  }\n\n  generateKey = () => {\n    http.post('/api/keys', {}).then(res => {\n      if (res)\n        this.getKeys(this.props.match.params.page)\n    })\n  }\n\n  deleteKey = (key: string) => {\n    if (window.confirm(`Sure to delete key ${key}?`))\n      http.delete(`/api/key/${key}`)\n        .then(res => {\n          if (res)\n            this.getKeys(this.state.currentPage)\n        })\n  }\n\n  clearKeys = () => {\n    if (window.confirm(`Sure to CLEAR ALL keys?`))\n      http.delete('/api/keys')\n      .then(res => {\n        if (res)\n          this.getKeys(this.state.currentPage)\n      })\n  }\n\n  renderTable = () => {\n    return this.state.data.length === 0 ? <span>There are no keys yet...</span> :\n        <div className=\"overflow-x-auto\">\n          <table className=\"table table-bordered table-striped table-hover text-nowrap\">\n            <thead>\n            <tr>\n              <th>Key</th>\n              <th>Create Time</th>\n              <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              this.state.data.map((item, index) =>\n                  <tr key={index}>\n                    <td><code>{item.value}</code></td>\n                    <td>{getFormattedTime(item.createTime)}</td>\n                    <td>\n                      <button className=\"btn btn-sm btn-danger\"\n                              onClick={() => {this.deleteKey(item.value)}}>\n                        <i className=\"fa fa-trash\"></i> Delete\n                      </button>\n                    </td>\n                  </tr>\n              )\n            }\n            </tbody>\n          </table>\n        </div>\n  }\n\n  render() {\n    return (\n        <div>\n          <div className=\"mb-3\">\n            <button type=\"button\"\n                    onClick={this.generateKey}\n                    className=\"btn btn-success btn-sm\">\n              <i className=\"fa fa-key\"></i>&nbsp;Generate Key\n            </button>\n            <button type=\"button\"\n                    className=\"btn btn-danger btn-sm\"\n                    style={{marginLeft: 10}}\n                    onClick={this.clearKeys}>\n              <i className=\"fa fa-trash\"></i>&nbsp;Clear All\n            </button>\n          </div>\n          {this.renderTable()}\n          <div className=\"my-3\">\n            {\n              this.state.data.length === 0 ? null :\n                  <div className=\"panel-footer\">\n                    <Pagination current={this.state.currentPage} total={this.state.pages} route=\"/dashboard/keys\"/>\n                  </div>\n            }\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Keys\n","import React from 'react'\nimport http from '../../../util/http'\nimport Pagination from '../../../components/pagination/Pagination'\nimport { getFormattedTime } from '../../../util/time'\n\ninterface HistoryItem {\n  uuid: string\n  routerId: string\n  triggerTime: string\n  result: string\n  succeeded: boolean\n}\n\ninterface Props {\n  match: any\n}\ninterface State {\n  next: boolean\n  data: HistoryItem[]\n  currentPage: number\n  pages: number\n  currentHistory: HistoryItem\n}\n\nclass Histories extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      currentPage: 1,\n      pages: 1,\n      next: false,\n      data: [],\n      currentHistory: {\n        uuid: '',\n        result: '',\n        routerId: '',\n        triggerTime: '',\n        succeeded: false\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    this.getHistories(this.props.match.params.page)\n  }\n\n  componentWillReceiveProps(\n      nextProps: Readonly<Props>, nextContext: any): void {\n    this.setState({\n      currentPage: parseInt(nextProps.match.params.page)\n    })\n    this.getHistories(nextProps.match.params.page)\n  }\n\n  getHistories = (page: number) => {\n    http.get(`/api/histories?page=${page}`)\n    .then(res => {\n      if (res)\n        this.setState({\n          next: res.data.data.next,\n          data: res.data.data.items,\n          pages: res.data.data.pages\n        })\n    })\n  }\n\n  handleViewHistory = (history: HistoryItem) => {\n    this.setState({\n      currentHistory: history\n    })\n  }\n\n  renderTable = () => {\n    return this.state.data.length === 0 ? <span>There are no histories yet...</span> :\n        <div className=\"overflow-x-auto\">\n          <table className=\"table table-bordered table-striped table-hover text-nowrap\">\n            <thead>\n            <tr>\n              <th>Hook</th>\n              <th>Trigger Time</th>\n              <th>Result</th>\n              <th>Status</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              this.state.data.map((item, index) =>\n                  <tr key={index}>\n                    <td><code>/hooks/{item.routerId}</code></td>\n                    <td>{getFormattedTime(item.triggerTime)}</td>\n                    <td>\n                      <button className=\"btn btn-primary btn-sm\"\n                              data-toggle=\"modal\"\n                              data-target=\"#view_result\"\n                              onClick={() => {this.handleViewHistory(item)}}>\n                        <i className=\"fa fa-eye\"></i> View\n                      </button>\n                    </td>\n                    <td>\n                      {\n                        item.succeeded ?\n                            <span className=\"badge badge-pill badge-success\">\n                            <i className=\"fa fa-smile\"></i> Succeded\n                          </span> :\n                            <span className=\"badge badge-pill badge-danger\">\n                            <i className=\"fa fa-frown\"></i> Failed\n                          </span>\n                      }\n                    </td>\n                  </tr>\n              )\n            }\n            </tbody>\n          </table>\n        </div>\n  }\n\n  render() {\n    return (\n        <div>\n          {this.renderTable()}\n          <div className=\"my-3\">\n            {\n              this.state.data.length === 0 ? null :\n                  <div className=\"panel-footer\">\n                    <Pagination current={this.state.currentPage} total={this.state.pages} route=\"/dashboard/histories\" />\n                  </div>\n            }\n          </div>\n          <div className=\"modal fade\" id=\"view_result\" role=\"dialog\"\n               aria-labelledby=\"myModalLabel\">\n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title text-ellipsis\">\n                    <i className=\"fa fa-eye\"></i> View Result of {this.state.currentHistory.uuid}\n                  </h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\"\n                          aria-label=\"Close\">\n                    <span aria-hidden=\"true\" className=\"text-white\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <pre>\n                    <code>\n                      {this.state.currentHistory.result}\n                    </code>\n                  </pre>\n                </div>\n                <div className=\"modal-footer\">\n                  <button className=\"btn btn-sm btn-primary\" data-dismiss=\"modal\">\n                    <i className=\"fa fa-check\"></i> OK\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Histories\n","import React from 'react'\nimport { Route, Switch, NavLink, Redirect } from 'react-router-dom'\nimport './Dashboard.css'\nimport http from '../../util/http'\nimport { history } from '../../App'\n\nimport Hooks from './hooks/Hooks'\nimport Keys from './keys/Keys'\nimport Histories from './histories/Histories'\nimport { ToastsStore } from '../../components/notification'\n\ninterface Props {}\ninterface State {\n  username: string\n  userId: string\n  editUsername: string\n  oldPassword: string\n  editPassword: string\n  retypePassword: string\n}\n\nclass Dashboard extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      username: '',\n      userId: '',\n      editUsername: '',\n      oldPassword: '',\n      editPassword: '',\n      retypePassword: ''\n    }\n  }\n\n  componentDidMount(): void {\n    this.getProfile()\n  }\n\n  getProfile = () => {\n    http.get('/api/profile')\n    .then(res => {\n      if (res)\n        this.setState({\n          username: res.data.data.username,\n          editUsername: res.data.data.username,\n          userId: res.data.data.uuid\n        })\n    })\n  }\n\n  logout = () => {\n    localStorage.removeItem('token')\n    sessionStorage.removeItem('token')\n    history.push('/login')\n  }\n\n  updateUsername = () => {\n    http.put('/api/profile', {\n      updates: {\n        username: this.state.editUsername\n      }\n    })\n    .then(res => {\n      if (res)\n        this.getProfile()\n    })\n  }\n\n  updatePassword = () => {\n    if (this.state.retypePassword === this.state.editPassword)\n      http.put('/api/profile', {\n        updates: {\n          password: this.state.oldPassword,\n          newPassword: this.state.editPassword\n        }\n      })\n    else\n      ToastsStore.error('New password does not equals to retyped password')\n  }\n\n  render() {\n    return (\n        <div>\n          <nav className=\"navbar navbar-dark bg-dark mb-4\">\n            <NavLink className=\"navbar-brand\" to=\"/dashboard\">\n              <img src=\"/logo.png\" height=\"30px\" width=\"30px\" alt=\"\"/>\n            </NavLink>\n            <button className=\"navbar-toggler d-lg-none d-xl-none\" type=\"button\"\n                    data-toggle=\"collapse\" data-target=\"#user\"\n                    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n              <i className=\"fa fa-user\"></i>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"user\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" role=\"button\" data-toggle=\"modal\" data-target=\"#update_username\">\n                    <i className=\"fa fa-edit\"></i> Change username\n                  </a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" role=\"button\" data-toggle=\"modal\" data-target=\"#update_password\">\n                    <i className=\"fa fa-key\"></i> Change password\n                  </a>\n                </li>\n                <div className=\"dropdown-divider\"></div>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" role=\"button\" onClick={this.logout}>\n                    <i className=\"fa fa-sign-out-alt\"></i> Logout\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"d-xs-block d-sm-block d-md-block d-lg-none d-xl-none\">\n                  <ul className=\"nav nav-pills mb-3\">\n                    <li className=\"nav-item\">\n                      <NavLink to=\"/dashboard/hooks\" className=\"nav-link\">Hooks</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                      <NavLink to=\"/dashboard/keys\" className=\"nav-link\">Keys</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                      <NavLink to=\"/dashboard/histories\" className=\"nav-link\">Histories</NavLink>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col col-xl-2 col-lg-3\">\n                <div className=\"d-none d-xs-none d-sm-none d-md-none d-lg-block d-xl-block\">\n                  <ul className=\"nav nav-pills flex-column mb-3\">\n                    <li className=\"nav-item dropdown\" style={{ width: '100%' }}>\n                      <a className=\"nav-link dropdown-toggle text-ellipsis\"\n                         data-toggle=\"dropdown\" href=\"#\" role=\"button\"\n                         aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i className=\"fa fa-user-circle\"></i> {this.state.username}\n                      </a>\n                      <div className=\"dropdown-menu\">\n                        <a className=\"dropdown-item\" role=\"button\" data-toggle=\"modal\" data-target=\"#update_username\">\n                          <i className=\"fa fa-edit\"></i> Change username\n                        </a>\n                        <a className=\"dropdown-item\" role=\"button\" data-toggle=\"modal\" data-target=\"#update_password\">\n                          <i className=\"fa fa-key\"></i> Change password\n                        </a>\n                        <div className=\"dropdown-divider\"></div>\n                        <a className=\"dropdown-item\" role=\"button\" onClick={this.logout}>\n                          <i className=\"fa fa-sign-out-alt\"></i> Logout\n                        </a>\n                      </div>\n                    </li>\n                    <hr/>\n                    <li className=\"nav-item\">\n                      <NavLink to=\"/dashboard/hooks\" className=\"nav-link\">Hooks</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                      <NavLink to=\"/dashboard/keys\" className=\"nav-link\">Keys</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                      <NavLink to=\"/dashboard/histories\" className=\"nav-link\">Histories</NavLink>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"col-12 col-xl-10 col-lg-9\">\n                <Switch>\n                  <Route path={'/dashboard/hooks/:page'} component={Hooks}/>\n                  <Route path={'/dashboard/keys/:page'} component={Keys}/>\n                  <Route path={'/dashboard/histories/:page'} component={Histories}/>\n                  <Redirect from={'/dashboard/keys'} to={'/dashboard/keys/1/'}/>\n                  <Redirect from={'/dashboard/histories'} to={'/dashboard/histories/1/'}/>\n                  <Redirect from={'/dashboard/hooks'} to={'/dashboard/hooks/1/'}/>\n                  <Redirect from={'/dashboard'} to={'/dashboard/hooks'}/>\n                </Switch>\n              </div>\n            </div>\n          </div>\n          <div className=\"modal fade\" id=\"update_username\" role=\"dialog\"\n               aria-labelledby=\"myModalLabel\">\n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title text-ellipsis\">\n                    <i className=\"fa fa-user-circle\"></i> Rename for {this.state.username}({this.state.userId})\n                  </h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\"\n                          aria-label=\"Close\">\n                    <span aria-hidden=\"true\" className=\"text-white\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"form-group form-group-sm\">\n                    <label>New username</label>\n                    <input className=\"form-control form-control-sm\"\n                              value={this.state.editUsername}\n                              onChange={e => this.setState({ editUsername: e.target.value })}/>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button className=\"btn btn-sm btn-primary\" data-dismiss=\"modal\">\n                    <i className=\"fa fa-times\"></i> Cancel\n                  </button>\n                  <button\n                      className=\"btn btn-sm btn-success\"\n                      data-dismiss=\"modal\"\n                      onClick={this.updateUsername}\n                      disabled={this.state.editUsername === ''}>\n                    <i className=\"fa fa-save\"></i> Update\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"modal fade\" id=\"update_password\" role=\"dialog\"\n               aria-labelledby=\"myModalLabel\">\n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title text-ellipsis\">\n                    <i className=\"fa fa-key\"></i> Change password\n                  </h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\"\n                          aria-label=\"Close\">\n                    <span aria-hidden=\"true\" className=\"text-white\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"form-group\">\n                    <label>Old password</label>\n                    <input className=\"form-control form-control-sm\"\n                           type=\"password\"\n                           value={this.state.oldPassword}\n                           onChange={e => this.setState({ oldPassword: e.target.value })}/>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>New password</label>\n                    <input className=\"form-control form-control-sm\"\n                           type=\"password\"\n                           value={this.state.editPassword}\n                           onChange={e => this.setState({ editPassword: e.target.value })}/>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Retype password</label>\n                    <input className=\"form-control form-control-sm\"\n                           type=\"password\"\n                           value={this.state.retypePassword}\n                           onChange={e => this.setState({ retypePassword: e.target.value })}/>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button className=\"btn btn-sm btn-primary\" data-dismiss=\"modal\">\n                    <i className=\"fa fa-times\"></i> Cancel\n                  </button>\n                  <button\n                      className=\"btn btn-sm btn-success\"\n                      data-dismiss=\"modal\"\n                      onClick={this.updatePassword}\n                      disabled={this.state.oldPassword === '' || this.state.editPassword === ''}>\n                    <i className=\"fa fa-save\"></i> Update\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Dashboard\n","import React from 'react'\nimport './App.css'\nimport { createHashHistory } from 'history'\nimport { Route, Router, Redirect, Switch } from 'react-router-dom'\nimport {\n  ToastsContainer,\n  ToastsContainerPosition,\n  ToastsStore } from './components/notification'\nimport Login from './pages/login/Login'\nimport Dashboard from './pages/dashboard/Dashboard'\n\nexport const history = createHashHistory()\n\nclass App extends React.Component {\n  render() {\n    return (\n        <div>\n          <Router history={history}>\n            <Switch>\n              <Route path={'/login'} component={Login}/>\n              <Route path={'/dashboard'} component={Dashboard}/>\n              <Redirect to={'/dashboard'}/>\n            </Switch>\n          </Router>\n          <ToastsContainer position={ToastsContainerPosition.TOP_CENTER} store={ToastsStore}/>\n        </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}