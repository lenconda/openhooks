{"version":3,"sources":["util/http.ts","pages/login/Login.tsx","components/Pagination.tsx","util/time.ts","pages/dashboard/hooks/Hooks.tsx","pages/dashboard/keys/Keys.tsx","pages/dashboard/histories/Histories.tsx","pages/dashboard/Dashboard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["axios","defaults","timeout","interceptors","request","use","config","headers","Authorization","concat","localStorage","getItem","sessionStorage","response","data","Object","prototype","toString","call","ToastsStore","success","error","status","removeItem","history","push","message","Login","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","state","login","_this$state","username","password","http","post","then","res","rememberUser","setItem","token","_this2","react_default","a","createElement","className","htmlFor","type","placeholder","value","onChange","e","setState","target","checked","onClick","React","Component","Pagination","handleHrefChange","page","route","getPages","pages","current","left","right","total","i","last","nextProps","nextContext","map","index","key","pop","disabled","getFormattedTime","timestamp","moment","parseInt","format","Hooks","getHooks","get","next","items","handleEditHook","item","editUuid","uuid","editCommand","command","editDescription","description","editAuthentication","auth","clearEditHook","updateHook","put","updates","currentPage","createHook","createCommand","createDescription","createAuthentication","match","params","deleteHook","window","confirm","delete","clearHooks","renderTable","length","updateTime","data-toggle","data-target","style","marginLeft","components_Pagination","id","role","aria-labelledby","data-dismiss","aria-label","aria-hidden","selected","Keys","getKeys","generateKey","deleteKey","clearKeys","createTime","showSuccessAlert","Histories","getHistories","handleViewHistory","currentHistory","routerId","triggerTime","succeeded","result","Dashboard","getProfile","editUsername","userId","logout","updateUsername","updatePassword","retypePassword","editPassword","oldPassword","newPassword","react_router_dom","to","href","aria-haspopup","aria-expanded","width","react_router","path","component","from","createHashHistory","App","lib","position","ToastsContainerPosition","TOP_RIGHT","store","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59356e51.chunk.js","sourcesContent":["import axios from 'axios'\nimport { history } from '../App'\nimport { ToastsStore } from 'react-toasts'\n\naxios.defaults.timeout = 3600000\naxios.interceptors.request.use(config => {\n  config.headers = {\n    Authorization:\n        `${localStorage.getItem('token') || sessionStorage.getItem('token')}`\n  }\n  return config\n})\naxios.interceptors.response.use(response => {\n  if (response.data.data &&\n      Object.prototype.toString.call(response.data.data) === \"[object String]\")\n    ToastsStore.success(response.data.data)\n  return response\n}, error => {\n  if (error.response.status === 401) {\n    localStorage.removeItem('token')\n    ToastsStore.error('Login first, please')\n    history.push('/login')\n  } else\n    ToastsStore.error(error.message)\n})\n\nexport default axios\n","import React from 'react'\nimport './Login.css'\nimport http from '../../util/http'\nimport { history } from '../../App'\n\ninterface Props {}\ninterface State {\n  rememberUser: boolean\n  username: string\n  password: string\n}\n\nclass Login extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      rememberUser: false\n    }\n  }\n\n  state: State\n\n  login = () => {\n    const { username, password } = this.state\n    http.post('/api/login', { username, password })\n        .then(res => {\n          if (res)\n            if (this.state.rememberUser)\n              localStorage.setItem('token', res.data.data.token)\n            else\n              sessionStorage.setItem('token', res.data.data.token)\n            history.push('/dashboard/hooks')\n        })\n  }\n\n  render() {\n    return (\n        <div className=\"container\">\n          <div className=\"row login\">\n            <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\">\n              <h1 className=\"h3 mb-3 font-weight-normal\">Sign in</h1>\n              <label htmlFor=\"inputEmail\" className=\"sr-only\">Username</label>\n              <input type=\"email\" className=\"form-control\" placeholder=\"Username\"\n                     value={this.state.username}\n                     onChange={e => this.setState({ username: e.target.value })}/>\n              <label htmlFor=\"inputPassword\" className=\"sr-only\">Password</label>\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\"\n                     value={this.state.password}\n                     onChange={e => this.setState({ password: e.target.value })}/>\n              <div className=\"checkbox mb-3\">\n                <label>\n                  <input type=\"checkbox\"\n                         checked={this.state.rememberUser}\n                         onChange={e => this.setState({ rememberUser: !this.state.rememberUser })}/> Remember me\n                </label>\n              </div>\n              <button className=\"btn btn-lg btn-primary btn-block\"\n                      type=\"submit\"\n                      onClick={this.login}>\n                Sign in\n              </button>\n              <p className=\"mt-5 mb-3 text-mute text-center\">© 2019 Lenconda.</p>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Login\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport { history } from '../App'\n\ninterface State {}\ninterface Props {\n  route: string\n  current: number\n  total: number\n}\n\nclass Pagination extends React.Component<Props, State> {\n  componentWillReceiveProps(\n      nextProps: Readonly<Props>, nextContext: any): void {\n  }\n\n  handleHrefChange = (page: number) => {\n    history.push(`${this.props.route}/${page}/`)\n  }\n\n  getPages = (): number[] => {\n    let pages = []\n    const current = this.props.current\n    const left = current - 1\n    const right = this.props.total - current\n    if (left >= 2 && right >= 2)\n      for (let i = current - 2; i <= current + 2; i++)\n        pages.push(i)\n    else if (left < 2 && right >= 2) {\n      const last = this.props.total > 5 ? 5 : this.props.total\n      for (let i = 1; i <= last; i++)\n        pages.push(i)\n    }\n    else if (right < 2 && left >= 2) {\n      const first = this.props.total > 5 ? this.props.total - 4 : 1\n      for (let i = first; i <= this.props.total; i++)\n        pages.push(i)\n    } else\n      for (let i = 1; i <= this.props.total; i++)\n        pages.push(i)\n    return pages\n  }\n\n  render() {\n    return (\n        <nav>\n          <ul className=\"pagination\">\n            <li className={`page-item ${this.props.current === 1 ? 'disabled' : ''}`}>\n              <a className=\"page-link\"\n                 onClick={() => {if (!(this.props.current === 1))\n                   this.handleHrefChange(1)}}>&laquo;\n              </a>\n            </li>\n            <li className={`page-item ${this.props.current === 1 ? 'disabled' : ''}`}>\n              <a className=\"page-link\"\n                 onClick={() => {if (!(this.props.current === 1))\n                   this.handleHrefChange(this.props.current - 1)}}>&lsaquo;\n              </a>\n            </li>\n            {\n              this.props.total <= 10 || this.getPages()[0] === 1 ? null :\n                  <li className=\"page-item disabled\"><a className=\"page-link\">...</a></li>\n            }\n            {\n              this.getPages().map((value, index) =>\n                  <li className={`page-item ${this.props.current === value ? 'active' : ''}`} key={index}>\n                    <a className=\"page-link\" onClick={() => this.handleHrefChange(value)}>{value}</a>\n                  </li>\n              )\n            }\n            {\n              this.props.total <= 10 || this.getPages().pop() === this.props.total\n                  ? null : <li><button disabled>...</button></li>\n            }\n            <li className={`page-item ${this.props.current === this.props.total ? 'disabled' : ''}`}>\n              <a className=\"page-link\"\n                 onClick={() => {if (!(this.props.current === this.props.total))\n                   this.handleHrefChange(this.props.current + 1)}}>&rsaquo;\n              </a>\n            </li>\n            <li className={`page-item ${this.props.current === this.props.total ? 'disabled' : ''}`}>\n              <a className=\"page-link\"\n                 onClick={() => {if (!(this.props.current === this.props.total))\n                   this.handleHrefChange(this.props.total)}}>&raquo;\n              </a>\n            </li>\n          </ul>\n        </nav>\n    )\n  }\n}\n\nexport default Pagination\n","import moment from 'moment'\n\nexport const getFormattedTime = (timestamp: string): string => {\n  if (timestamp)\n    return moment(parseInt(timestamp)).format('YYYY-MM-DD HH:mm:ss')\n  else\n    return 'unknown'\n}\n","import React from 'react'\nimport http from '../../../util/http'\nimport Pagination from '../../../components/Pagination'\nimport { getFormattedTime } from '../../../util/time'\n\ninterface Props {\n  match: any\n}\ninterface State {\n  next: boolean\n  data: any[]\n  currentPage: number\n  pages: number\n  createCommand: string\n  createDescription: string\n  createAuthentication: string\n  editUuid: string\n  editCommand: string\n  editDescription: string\n  editAuthentication: string\n}\n\nclass Hooks extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      currentPage: 1,\n      pages: 1,\n      next: false,\n      data: [],\n      createCommand: '',\n      createDescription: '',\n      createAuthentication: '1',\n      editUuid: '',\n      editCommand: '',\n      editDescription: '',\n      editAuthentication: ''\n    }\n  }\n\n  componentDidMount(): void {\n    this.getHooks(this.props.match.params.page)\n  }\n\n  componentWillReceiveProps(\n      nextProps: Readonly<Props>, nextContext: any): void {\n    this.setState({\n      currentPage: parseInt(nextProps.match.params.page)\n    })\n    this.getHooks(nextProps.match.params.page)\n  }\n\n  getHooks = (page: number) => {\n    http.get(`/api/hooks?page=${page}`)\n    .then(res => {\n      if (res)\n        this.setState({\n          next: res.data.data.next,\n          data: res.data.data.items,\n          pages: res.data.data.pages\n        })\n    })\n  }\n\n  handleEditHook = (item: any) => {\n    this.setState({\n      editUuid: item.uuid,\n      editCommand: item.command,\n      editDescription: item.description,\n      editAuthentication: item.auth ? '0' : '1'\n    })\n  }\n\n  clearEditHook = () => {\n    this.setState({\n      editUuid: '',\n      editCommand: '',\n      editDescription: '',\n      editAuthentication: ''\n    })\n  }\n\n  updateHook = () => {\n    http.put(`/api/hook/${this.state.editUuid}`, {\n      updates: {\n        command: this.state.editCommand,\n        description: this.state.editDescription,\n        auth: this.state.editAuthentication === '0'\n      }\n    })\n    .then(res => {\n      if (res)\n        this.getHooks(this.state.currentPage)\n        this.clearEditHook()\n    })\n  }\n\n  createHook = () => {\n    http.post('/api/hooks', {\n      command: this.state.createCommand,\n      description: this.state.createDescription,\n      auth: this.state.createAuthentication === '0'\n    }).then(res => {\n      if (res) {\n        this.getHooks(this.props.match.params.page)\n        this.setState({\n          createCommand: '',\n          createDescription: '',\n          createAuthentication: '0'\n        })\n      }\n    })\n  }\n\n  deleteHook = (uuid: string) => {\n    if (window.confirm(`Sure to delete hook /hooks/${uuid}?`))\n      http.delete(`/api/hook/${uuid}`)\n        .then(res => {\n          if (res)\n            this.getHooks(this.state.currentPage)\n        })\n  }\n\n  clearHooks = () => {\n    if (window.confirm(`Sure to CLEAR ALL hooks?`))\n      http.delete('/api/hooks')\n      .then(res => {\n        if (res)\n          this.getHooks(this.state.currentPage)\n      })\n  }\n\n  renderTable = () => {\n    return this.state.data.length === 0 ? <span>There are no hooks yet...</span> :\n        <div className=\"overflow-x-auto\">\n          <table className=\"table table-bordered table-striped table-hover text-nowrap\">\n            <thead>\n            <tr>\n              <th>Path</th>\n              <th>Command</th>\n              <th>Description</th>\n              <th>Authentication</th>\n              <th>Update Time</th>\n              <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              this.state.data.map((item, index) =>\n                  <tr key={index}>\n                    <td><code>/hooks/{item.uuid}</code></td>\n                    <td><code>{item.command}</code></td>\n                    <td>{item.description}</td>\n                    <td className=\"text-center\">\n                      {item.auth ? <i className=\"fa fa-check\"></i> : <i className=\"fa fa-times\"></i>}\n                    </td>\n                    <td>{getFormattedTime(item.updateTime)}</td>\n                    <td>\n                      <button className=\"btn btn-sm btn-danger\"\n                              onClick={() => {this.deleteHook(item.uuid)}}>\n                        <i className=\"fa fa-trash\"></i> Delete\n                      </button>\n                      <button type=\"button\"\n                              className=\"btn btn-sm btn-warning\"\n                              data-toggle=\"modal\"\n                              data-target=\"#edit_hook\"\n                              style={{marginLeft: 5}}\n                              onClick={() => this.handleEditHook(item)}>\n                        <i className=\"fa fa-edit\"></i> Edit\n                      </button>\n                    </td>\n                  </tr>\n              )\n            }\n            </tbody>\n          </table>\n        </div>\n  }\n\n  render() {\n    return (\n        <div>\n          <div className=\"mb-3\">\n            <button type=\"button\" className=\"btn btn-success btn-sm\"\n                    data-toggle=\"modal\" data-target=\"#add_hook\">\n              <i className=\"fa fa-lightbulb\"></i>&nbsp;Add a Hook\n            </button>\n            <button type=\"button\"\n                    className=\"btn btn-danger btn-sm\"\n                    style={{marginLeft: 10}}\n                    onClick={this.clearHooks}>\n              <i className=\"fa fa-trash\"></i>&nbsp;Clear All\n            </button>\n          </div>\n          {this.renderTable()}\n          <div className=\"my-3\">\n            {\n              this.state.data.length === 0 ? null :\n                  <div className=\"panel-footer\">\n                    <Pagination current={this.state.currentPage} total={this.state.pages} route=\"/dashboard/hooks\" />\n                  </div>\n            }\n          </div>\n          <div className=\"modal fade\" id=\"add_hook\" role=\"dialog\"\n               aria-labelledby=\"myModalLabel\">\n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title text-ellipsis\"><i className=\"fa fa-lightbulb\"></i> Add a Hook</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\"\n                          aria-label=\"Close\">\n                    <span aria-hidden=\"true\" className=\"text-white\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"form-group\">\n                    <label>Shell command</label>\n                    <code>\n                      <textarea className=\"form-control form-control-sm\"\n                                value={this.state.createCommand}\n                                onChange={e => this.setState({ createCommand: e.target.value })}/>\n                    </code>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Description</label>\n                    <textarea className=\"form-control form-control-sm\"\n                              value={this.state.createDescription}\n                              onChange={e => this.setState({ createDescription: e.target.value })}/>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Authentication</label>\n                    <select className=\"form-control form-control-sm\"\n                            onChange={e => this.setState({ createAuthentication: e.target.value })}>\n                      <option value=\"0\" selected={this.state.createAuthentication === '0'}>Use access key</option>\n                      <option value=\"1\" selected={this.state.createAuthentication === '1'}>Do not use any key</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button className=\"btn btn-sm btn-primary\" data-dismiss=\"modal\"><i className=\"fa fa-times\"></i> Cancel</button>\n                  <button\n                      className=\"btn btn-sm btn-success\"\n                      data-dismiss=\"modal\"\n                      onClick={this.createHook}\n                      disabled={this.state.createAuthentication === ''\n                      || this.state.createDescription === ''\n                      || this.state.createCommand === ''}>\n                    <i className=\"fa fa-save\"></i> Save\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"modal fade\" id=\"edit_hook\" role=\"dialog\"\n               aria-labelledby=\"myModalLabel\">\n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title text-ellipsis\">\n                    <i className=\"fa fa-edit\"></i> Edit Hook {this.state.editUuid}\n                  </h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\"\n                          aria-label=\"Close\">\n                    <span aria-hidden=\"true\" className=\"text-white\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"form-group\">\n                    <label>Shell command</label>\n                    <code>\n                      <textarea className=\"form-control form-control-sm\"\n                                value={this.state.editCommand}\n                                onChange={e => this.setState({ editCommand: e.target.value })}/>\n                    </code>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Description</label>\n                    <textarea className=\"form-control form-control-sm\"\n                              value={this.state.editDescription}\n                              onChange={e => this.setState({ editDescription: e.target.value })}/>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Authentication</label>\n                    <select className=\"form-control form-control-sm\"\n                            onChange={e => this.setState({ editAuthentication: e.target.value })}>\n                      <option value=\"0\" selected={this.state.editAuthentication === '0'}>Use access key</option>\n                      <option value=\"1\" selected={this.state.editAuthentication === '1'}>Do not use any key</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button className=\"btn btn-sm btn-primary\" data-dismiss=\"modal\" onClick={this.clearEditHook}>\n                    <i className=\"fa fa-times\"></i> Cancel\n                  </button>\n                  <button\n                      className=\"btn btn-sm btn-success\"\n                      data-dismiss=\"modal\"\n                      onClick={this.updateHook}\n                      disabled={this.state.editAuthentication === ''\n                      || this.state.editAuthentication === ''\n                      || this.state.editAuthentication === ''}>\n                    <i className=\"fa fa-save\"></i> Update\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Hooks\n","import React from 'react'\nimport http from '../../../util/http'\nimport Pagination from '../../../components/Pagination'\nimport { getFormattedTime } from '../../../util/time'\n\ninterface Props {\n  match: any\n}\ninterface State {\n  next: boolean\n  data: any[]\n  currentPage: number\n  pages: number\n  createCommand: string\n  createDescription: string\n  createAuthentication: string\n  editUuid: string\n  editCommand: string\n  editDescription: string\n  editAuthentication: string\n  showSuccessAlert: boolean\n}\n\nclass Keys extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      currentPage: 1,\n      pages: 1,\n      next: false,\n      data: [],\n      createCommand: '',\n      createDescription: '',\n      createAuthentication: '1',\n      editUuid: '',\n      editCommand: '',\n      editDescription: '',\n      editAuthentication: '',\n      showSuccessAlert: false\n    }\n  }\n\n  componentDidMount(): void {\n    this.getKeys(this.props.match.params.page)\n  }\n\n  componentWillReceiveProps(\n      nextProps: Readonly<Props>, nextContext: any): void {\n    this.setState({\n      currentPage: parseInt(nextProps.match.params.page)\n    })\n    this.getKeys(nextProps.match.params.page)\n  }\n\n  getKeys = (page: number) => {\n    http.get(`/api/keys?page=${page}`)\n    .then(res => {\n      if (res)\n        this.setState({\n          next: res.data.data.next,\n          data: res.data.data.items,\n          pages: res.data.data.pages\n        })\n    })\n  }\n\n  generateKey = () => {\n    http.post('/api/keys', {}).then(res => {\n      if (res)\n        this.getKeys(this.props.match.params.page)\n    })\n  }\n\n  deleteKey = (key: string) => {\n    if (window.confirm(`Sure to delete key ${key}?`))\n      http.delete(`/api/key/${key}`)\n        .then(res => {\n          if (res)\n            this.getKeys(this.state.currentPage)\n        })\n  }\n\n  clearKeys = () => {\n    if (window.confirm(`Sure to CLEAR ALL keys?`))\n      http.delete('/api/keys')\n      .then(res => {\n        if (res)\n          this.getKeys(this.state.currentPage)\n      })\n  }\n\n  renderTable = () => {\n    return this.state.data.length === 0 ? <span>There are no keys yet...</span> :\n        <div className=\"overflow-x-auto\">\n          <table className=\"table table-bordered table-striped table-hover text-nowrap\">\n            <thead>\n            <tr>\n              <th>Key</th>\n              <th>Create Time</th>\n              <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              this.state.data.map((item, index) =>\n                  <tr key={index}>\n                    <td><code>{item.value}</code></td>\n                    <td>{getFormattedTime(item.createTime)}</td>\n                    <td>\n                      <button className=\"btn btn-sm btn-danger\"\n                              onClick={() => {this.deleteKey(item.value)}}>\n                        <i className=\"fa fa-trash\"></i> Delete\n                      </button>\n                    </td>\n                  </tr>\n              )\n            }\n            </tbody>\n          </table>\n        </div>\n  }\n\n  render() {\n    return (\n        <div>\n          <div className=\"mb-3\">\n            <button type=\"button\"\n                    onClick={this.generateKey}\n                    className=\"btn btn-success btn-sm\">\n              <i className=\"fa fa-key\"></i>&nbsp;Generate Key\n            </button>\n            <button type=\"button\"\n                    className=\"btn btn-danger btn-sm\"\n                    style={{marginLeft: 10}}\n                    onClick={this.clearKeys}>\n              <i className=\"fa fa-trash\"></i>&nbsp;Clear All\n            </button>\n          </div>\n          {this.renderTable()}\n          <div className=\"my-3\">\n            {\n              this.state.data.length === 0 ? null :\n                  <div className=\"panel-footer\">\n                    <Pagination current={this.state.currentPage} total={this.state.pages} route=\"/dashboard/keys\"/>\n                  </div>\n            }\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Keys\n","import React from 'react'\nimport http from '../../../util/http'\nimport Pagination from '../../../components/Pagination'\nimport { getFormattedTime } from '../../../util/time'\n\ninterface HistoryItem {\n  uuid: string\n  routerId: string\n  triggerTime: string\n  result: string\n  succeeded: boolean\n}\n\ninterface Props {\n  match: any\n}\ninterface State {\n  next: boolean\n  data: HistoryItem[]\n  currentPage: number\n  pages: number\n  currentHistory: HistoryItem\n}\n\nclass Histories extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      currentPage: 1,\n      pages: 1,\n      next: false,\n      data: [],\n      currentHistory: {\n        uuid: '',\n        result: '',\n        routerId: '',\n        triggerTime: '',\n        succeeded: false\n      }\n    }\n  }\n\n  componentDidMount(): void {\n    this.getHistories(this.props.match.params.page)\n  }\n\n  componentWillReceiveProps(\n      nextProps: Readonly<Props>, nextContext: any): void {\n    this.setState({\n      currentPage: parseInt(nextProps.match.params.page)\n    })\n    this.getHistories(nextProps.match.params.page)\n  }\n\n  getHistories = (page: number) => {\n    http.get(`/api/histories?page=${page}`)\n    .then(res => {\n      if (res)\n        this.setState({\n          next: res.data.data.next,\n          data: res.data.data.items,\n          pages: res.data.data.pages\n        })\n    })\n  }\n\n  handleViewHistory = (history: HistoryItem) => {\n    this.setState({\n      currentHistory: history\n    })\n  }\n\n  renderTable = () => {\n    return this.state.data.length === 0 ? <span>There are no histories yet...</span> :\n        <div className=\"overflow-x-auto\">\n          <table className=\"table table-bordered table-striped table-hover text-nowrap\">\n            <thead>\n            <tr>\n              <th>Hook</th>\n              <th>Trigger Time</th>\n              <th>Result</th>\n              <th>Status</th>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              this.state.data.map((item, index) =>\n                  <tr key={index}>\n                    <td><code>/hooks/{item.routerId}</code></td>\n                    <td>{getFormattedTime(item.triggerTime)}</td>\n                    <td>\n                      <button className=\"btn btn-primary btn-sm\"\n                              data-toggle=\"modal\"\n                              data-target=\"#view_result\"\n                              onClick={() => {this.handleViewHistory(item)}}>\n                        <i className=\"fa fa-eye\"></i> View\n                      </button>\n                    </td>\n                    <td>\n                      {\n                        item.succeeded ?\n                            <span className=\"badge badge-pill badge-success\">\n                            <i className=\"fa fa-smile\"></i> Succeded\n                          </span> :\n                            <span className=\"badge badge-pill badge-danger\">\n                            <i className=\"fa fa-frown\"></i> Failed\n                          </span>\n                      }\n                    </td>\n                  </tr>\n              )\n            }\n            </tbody>\n          </table>\n        </div>\n  }\n\n  render() {\n    return (\n        <div>\n          {this.renderTable()}\n          <div className=\"my-3\">\n            {\n              this.state.data.length === 0 ? null :\n                  <div className=\"panel-footer\">\n                    <Pagination current={this.state.currentPage} total={this.state.pages} route=\"/dashboard/histories\" />\n                  </div>\n            }\n          </div>\n          <div className=\"modal fade\" id=\"view_result\" role=\"dialog\"\n               aria-labelledby=\"myModalLabel\">\n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title text-ellipsis\">\n                    <i className=\"fa fa-eye\"></i> View Result of {this.state.currentHistory.uuid}\n                  </h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\"\n                          aria-label=\"Close\">\n                    <span aria-hidden=\"true\" className=\"text-white\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <pre>\n                    <code>\n                      {this.state.currentHistory.result}\n                    </code>\n                  </pre>\n                </div>\n                <div className=\"modal-footer\">\n                  <button className=\"btn btn-sm btn-primary\" data-dismiss=\"modal\">\n                    <i className=\"fa fa-check\"></i> OK\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Histories\n","import React from 'react'\nimport { Route, Switch, Link, NavLink, Redirect } from 'react-router-dom'\nimport './Dashboard.css'\nimport http from '../../util/http'\nimport { history } from '../../App'\n\nimport Hooks from './hooks/Hooks'\nimport Keys from './keys/Keys'\nimport Histories from './histories/Histories'\nimport { ToastsStore } from 'react-toasts'\n\ninterface Props {}\ninterface State {\n  username: string\n  userId: string\n  editUsername: string\n  oldPassword: string\n  editPassword: string\n  retypePassword: string\n}\n\nclass Dashboard extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      username: '',\n      userId: '',\n      editUsername: '',\n      oldPassword: '',\n      editPassword: '',\n      retypePassword: ''\n    }\n  }\n\n  componentDidMount(): void {\n    this.getProfile()\n  }\n\n  getProfile = () => {\n    http.get('/api/profile')\n    .then(res => {\n      if (res)\n        this.setState({\n          username: res.data.data.username,\n          editUsername: res.data.data.username,\n          userId: res.data.data.uuid\n        })\n    })\n  }\n\n  logout = () => {\n    localStorage.removeItem('token')\n    sessionStorage.removeItem('token')\n    history.push('/login')\n  }\n\n  updateUsername = () => {\n    http.put('/api/profile', {\n      updates: {\n        username: this.state.editUsername\n      }\n    })\n    .then(res => {\n      if (res)\n        this.getProfile()\n    })\n  }\n\n  updatePassword = () => {\n    if (this.state.retypePassword === this.state.editPassword)\n      http.put('/api/profile', {\n        updates: {\n          password: this.state.oldPassword,\n          newPassword: this.state.editPassword\n        }\n      })\n    else\n      ToastsStore.error('New password does not equals to retyped password')\n  }\n\n  render() {\n    return (\n        <div>\n          <nav className=\"navbar navbar-dark bg-dark mb-4\">\n            <NavLink className=\"navbar-brand\" to=\"/dashboard\">Openhooks Dashboard</NavLink>\n          </nav>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"d-xs-block d-sm-block d-md-block d-lg-none d-xl-none\">\n                  <div className=\"dropdown show mb-3\">\n                    <a className=\"btn btn-primary btn-sm dropdown-toggle text-ellipsis\" href=\"#\"\n                       role=\"button\" id=\"dropdownMenuLink\"\n                       data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                       aria-expanded=\"false\">\n                      <i className=\"fa fa-user-circle\"></i> {this.state.username}({this.state.userId})\n                    </a>\n                    <div className=\"dropdown-menu\">\n                      <a className=\"dropdown-item\" role=\"button\" data-toggle=\"modal\" data-target=\"#update_username\">\n                        <i className=\"fa fa-edit\"></i> Change username\n                      </a>\n                      <a className=\"dropdown-item\" role=\"button\" data-toggle=\"modal\" data-target=\"#update_password\">\n                        <i className=\"fa fa-key\"></i> Change password\n                      </a>\n                      <div className=\"dropdown-divider\"></div>\n                      <a className=\"dropdown-item\" role=\"button\" onClick={this.logout}>\n                        <i className=\"fa fa-sign-out-alt\"></i> Logout\n                      </a>\n                    </div>\n                  </div>\n                  <ul className=\"nav nav-pills mb-3\">\n                    <li className=\"nav-item\">\n                      <NavLink to=\"/dashboard/hooks\" className=\"nav-link\">Hooks</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                      <NavLink to=\"/dashboard/keys\" className=\"nav-link\">Keys</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                      <NavLink to=\"/dashboard/histories\" className=\"nav-link\">Histories</NavLink>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col col-xl-2 col-lg-3\">\n                <div className=\"d-none d-xs-none d-sm-none d-md-none d-lg-block d-xl-block\">\n                  <ul className=\"nav nav-pills flex-column mb-3\">\n                    <li className=\"nav-item\">\n                      <NavLink to=\"/dashboard/hooks\" className=\"nav-link\">Hooks</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                      <NavLink to=\"/dashboard/keys\" className=\"nav-link\">Keys</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                      <NavLink to=\"/dashboard/histories\" className=\"nav-link\">Histories</NavLink>\n                    </li>\n                    <hr/>\n                    <li className=\"nav-item dropdown\" style={{ width: '100%' }}>\n                      <a className=\"nav-link dropdown-toggle text-ellipsis\"\n                         data-toggle=\"dropdown\" href=\"#\" role=\"button\"\n                         aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i className=\"fa fa-user-circle\"></i> {this.state.username}({this.state.userId})\n                      </a>\n                      <div className=\"dropdown-menu\">\n                        <a className=\"dropdown-item\" role=\"button\" data-toggle=\"modal\" data-target=\"#update_username\">\n                          <i className=\"fa fa-edit\"></i> Change username\n                        </a>\n                        <a className=\"dropdown-item\" role=\"button\" data-toggle=\"modal\" data-target=\"#update_password\">\n                          <i className=\"fa fa-key\"></i> Change password\n                        </a>\n                        <div className=\"dropdown-divider\"></div>\n                        <a className=\"dropdown-item\" role=\"button\" onClick={this.logout}>\n                          <i className=\"fa fa-sign-out-alt\"></i> Logout\n                        </a>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"col-12 col-xl-10 col-lg-9\">\n                <Switch>\n                  <Route path={'/dashboard/hooks/:page'} component={Hooks}/>\n                  <Route path={'/dashboard/keys/:page'} component={Keys}/>\n                  <Route path={'/dashboard/histories/:page'} component={Histories}/>\n                  <Redirect from={'/dashboard/keys'} to={'/dashboard/keys/1/'}/>\n                  <Redirect from={'/dashboard/histories'} to={'/dashboard/histories/1/'}/>\n                  <Redirect from={'/dashboard/hooks'} to={'/dashboard/hooks/1/'}/>\n                  <Redirect from={'/dashboard'} to={'/dashboard/hooks'}/>\n                </Switch>\n              </div>\n            </div>\n          </div>\n          <div className=\"modal fade\" id=\"update_username\" role=\"dialog\"\n               aria-labelledby=\"myModalLabel\">\n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title text-ellipsis\">\n                    <i className=\"fa fa-user-circle\"></i> Rename for {this.state.username}({this.state.userId})\n                  </h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\"\n                          aria-label=\"Close\">\n                    <span aria-hidden=\"true\" className=\"text-white\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"form-group form-group-sm\">\n                    <label>New username</label>\n                    <input className=\"form-control form-control-sm\"\n                              value={this.state.editUsername}\n                              onChange={e => this.setState({ editUsername: e.target.value })}/>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button className=\"btn btn-sm btn-primary\" data-dismiss=\"modal\">\n                    <i className=\"fa fa-times\"></i> Cancel\n                  </button>\n                  <button\n                      className=\"btn btn-sm btn-success\"\n                      data-dismiss=\"modal\"\n                      onClick={this.updateUsername}\n                      disabled={this.state.editUsername === ''}>\n                    <i className=\"fa fa-save\"></i> Update\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"modal fade\" id=\"update_password\" role=\"dialog\"\n               aria-labelledby=\"myModalLabel\">\n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title text-ellipsis\">\n                    <i className=\"fa fa-key\"></i> Change password\n                  </h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\"\n                          aria-label=\"Close\">\n                    <span aria-hidden=\"true\" className=\"text-white\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"form-group\">\n                    <label>Old password</label>\n                    <input className=\"form-control form-control-sm\"\n                           type=\"password\"\n                           value={this.state.oldPassword}\n                           onChange={e => this.setState({ oldPassword: e.target.value })}/>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>New password</label>\n                    <input className=\"form-control form-control-sm\"\n                           type=\"password\"\n                           value={this.state.editPassword}\n                           onChange={e => this.setState({ editPassword: e.target.value })}/>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Retype password</label>\n                    <input className=\"form-control form-control-sm\"\n                           type=\"password\"\n                           value={this.state.retypePassword}\n                           onChange={e => this.setState({ retypePassword: e.target.value })}/>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button className=\"btn btn-sm btn-primary\" data-dismiss=\"modal\">\n                    <i className=\"fa fa-times\"></i> Cancel\n                  </button>\n                  <button\n                      className=\"btn btn-sm btn-success\"\n                      data-dismiss=\"modal\"\n                      onClick={this.updatePassword}\n                      disabled={this.state.oldPassword === '' || this.state.editPassword === ''}>\n                    <i className=\"fa fa-save\"></i> Update\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Dashboard\n","import React from 'react'\nimport './App.css'\nimport { createHashHistory } from 'history'\nimport { Route, Router, Redirect, Switch } from 'react-router-dom'\nimport {\n  ToastsContainer,\n  ToastsContainerPosition,\n  ToastsStore } from 'react-toasts'\nimport Login from './pages/login/Login'\nimport Dashboard from './pages/dashboard/Dashboard'\n\nexport const history = createHashHistory()\n\nclass App extends React.Component {\n  render() {\n    return (\n        <div>\n          <Router history={history}>\n            <Switch>\n              <Route path={'/login'} component={Login}/>\n              <Route path={'/dashboard'} component={Dashboard}/>\n              <Redirect to={'/dashboard'}/>\n            </Switch>\n          </Router>\n          <ToastsContainer position={ToastsContainerPosition.TOP_RIGHT} store={ToastsStore}/>\n        </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}